<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.devit.repository.CommonRepository">
	
	<!-- 모든 정보 검색 -->
	<select id="selectInfomationBySearch" resultType="SearchInfoResponse">
		SELECT 
		    l.lecture_id lectureId,
		    l.title,
	        l.content,
		    l.thumbnail_Url thumbnailUrl,
		    u.nickname,
		    IFNULL(lsi.lectureCount, 0) AS lectureCount,
		    IFNULL(l.view_count, 0) AS viewCount,
		    IFNULL(likeCount, 0) AS likeCount,
		    lt.tagName,
		    l.type,
		    CASE
		        WHEN lk.lecture_id IS NULL THEN FALSE
		        ELSE TRUE
		    END AS userLikeYn
		FROM
		    lecture l
		        INNER JOIN
		    (SELECT DISTINCT
		        (a.lecture_id) AS lecture_id
		    FROM
		        lecture a
		    LEFT OUTER JOIN lecture_tag b ON a.common_id = b.common_id
		    WHERE
		        a.title LIKE CONCAT('%', #{searchText},'%')
		            OR a.content LIKE CONCAT('%', #{searchText},'%')
		            OR b.tag_name LIKE CONCAT('%', #{searchText},'%')) s ON l.lecture_id = s.lecture_id
		        LEFT OUTER JOIN
		    user u ON l.user_id = u.user_id
		        LEFT OUTER JOIN
		    (SELECT 
		        lsi.lecture_id,
		            COUNT(lsi.sub_id) AS lectureCount
		    FROM lecture_sub_index lsi
		    GROUP BY lsi.lecture_id
            ) lsi 
            ON l.lecture_id = lsi.lecture_id
		        LEFT OUTER JOIN
		    (SELECT 
		        lecture_id, COUNT(1) AS likeCount
		    FROM
		        lecture_like
		    WHERE
		        like_flag = 'Y'
		    GROUP BY lecture_id) ll ON l.lecture_id = ll.lecture_id
		        LEFT OUTER JOIN
		    (SELECT 
		        common_id, GROUP_CONCAT(tag_name) tagName
		    FROM
		        lecture_tag
		    GROUP BY common_id) lt ON l.common_id = lt.common_id
		        LEFT OUTER JOIN
		    (SELECT 
		        *
		    FROM
		        lecture_like
		    WHERE
		        user_id = #{userId} AND like_flag = 'Y') lk ON lk.lecture_id = l.lecture_id
		GROUP BY l.lecture_id
		ORDER BY l.lecture_id
		LIMIT #{startPage}, 20;
	</select>
	
		<!-- common 테스트 -->
	<insert id="test" useGeneratedKeys="true" keyProperty="commonId" parameterType="Common">
		insert into lecture_common value()
	</insert>
	
	
   <!-- 메인화면 데빗 현황 조회 -->
      <select id="getMainStatus" resultType="MainResponse">
      
		select concat(format(ifnull(u.totalUsers, 0), 0), '명') as totalUsers, 
			   concat(format(ifnull(d.totalDeviters, 0), 0), '명') as totalDeviters, 
	           concat(format(ifnull(l.totalLectures, 0), 0), '강의') as totalLectures
	      from (
				select 1
	              from dual
			   ) a
			   left outer join
	           (
				select count(1) as totalUsers
				  from user
			   ) u
	           on
	           1=1
			   left outer join
	           (
	            select count(1) as totalDeviters 
                from (
		                select user_id
			              from lecture_sub_history 
						 where accept_yn = 'Y'
					  group by user_id
		              ) a
	           ) d
	           on
	           1=1
	           left outer join
	           (
	            select count(1) as totalLectures
	              from lecture
				 where deleted_flag = 'N'
	           ) l
	           on
	           1=1;
      </select>
</mapper>