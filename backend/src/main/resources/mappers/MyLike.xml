<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.devit.repository.MyLikeRepository">
		
		
	<!-- 내가 좋아요 한 프로젝트 목록 조회 -->
	      <select id="myLikeLectureList" resultType="LecturesResponse">
		SELECT 
		    l.lecture_id lectureId,
		    l.title,
		    l.user_id userId,
		    l.common_id commonId,
		    l.view_count viewCount,
		    l.thumbnail_Url thumbnailUrl,
		    u.nickname,
		    u.profile,
		    COUNT(lsi.sub_id) lectureCount,
		    l.view_count viewCount,
		    IFNULL(likeCount, 0) AS likeCount,
		    lt.tagName,
		    CASE
		        WHEN lk.lecture_id IS NULL THEN FALSE
		        ELSE TRUE
		    END AS userLikeYn
		FROM
		    lecture l
		        LEFT OUTER JOIN
		    user u ON l.user_id = u.user_id
		        LEFT OUTER JOIN
		    lecture_sub_index lsi ON l.lecture_id = lsi.lecture_id
		        LEFT OUTER JOIN
		    (SELECT 
		        lecture_id, COUNT(1) AS likeCount
		    FROM
		        lecture_like
		    WHERE
		        like_flag = 'Y'
		    GROUP BY lecture_id) ll ON l.lecture_id = ll.lecture_id
		        LEFT OUTER JOIN
		    (SELECT 
		        common_id, GROUP_CONCAT(tag_name) tagName
		    FROM
		        lecture_tag
		    GROUP BY common_id) lt ON l.common_id = lt.common_id
		        LEFT OUTER JOIN
		    (SELECT 
		        *
		    FROM
		        lecture_like
		    WHERE
		        user_id = #{userId} AND like_flag = 'Y') lk ON lk.lecture_id = l.lecture_id
		WHERE
		    EXISTS (select 1 from lecture_like where user_id = #{userId} AND like_flag = 'Y' and lecture_id = l.lecture_id)
		GROUP BY l.lecture_id
		ORDER BY l.lecture_id
		LIMIT #{startPage}, #{itemsperpage};
      </select>
      
      
	<!-- 내가 좋아요한 동영상 목록 조회 -->
	<select id="myLikeVideoList" resultType="TheOhterSubLectureResponse">
		SELECT 
		    lsi.lecture_id lectureId,
		    lsi.sub_id subId,
            lsh.sub_his_id subHisId,
		    lsh.title,
		    lsh.player_url playerUrl,
		    lsh.play_time playTime,
		    lsh.view_count viewCount,
		    IFNULL(lg.like_count, 0) likeCount,
		    lsh.thumbnail_url thumbnailUrl,
            (SELECT nickname FROM user WHERE user_id = lsh.user_id) nickname,
		    CASE
		        WHEN
		            EXISTS( SELECT 
		                    1
		                FROM
		                    lecture_sub_his_like
		                WHERE
		                    like_flag = 'Y' AND user_id = #{userId}
		                        AND lecture_id = lsh.lecture_id
		                        AND sub_id = lsh.sub_id
		                        AND sub_his_id = lsh.sub_his_id)
		        THEN
		            TRUE
		        ELSE FALSE
		    END userLikeYn
		FROM
		    lecture_sub_index lsi
		        INNER JOIN
		    lecture_sub_history lsh ON lsi.lecture_id = lsh.lecture_id
		        AND lsi.sub_id = lsh.sub_id
		        AND lsh.req_type = 'video'
		        LEFT OUTER JOIN
		    (SELECT 
		        COUNT(1) like_count, lecture_id, sub_id, sub_his_id
		    FROM
		        lecture_sub_his_like lshl
		    GROUP BY sub_id , sub_his_id) lg ON lsh.lecture_id = lg.lecture_id
		        AND lsh.sub_id = lg.sub_id
		        AND lsh.sub_his_id = lg.sub_his_id
		WHERE
		    lsh.player_url IS NOT NULL
		  and exists (select 1 from lecture_sub_his_like 
		  				where user_id = #{userId} and lecture_id = lsh.lecture_id 
		  				  and sub_id = lsh.sub_id and sub_his_id = lsh.sub_his_id
		  				  and like_flag = 'Y');
	</select>
</mapper>